{"ast":null,"code":"import { createStore } from \"redux\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\nconst countReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + action.amount\n    };\n  } else if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(countReducer);\nexport default store;","map":{"version":3,"names":["createStore","initialState","counter","showCounter","countReducer","state","action","type","amount","store"],"sources":["/Users/vladbordia/Downloads/01-starting-project 2/src/store /index.js"],"sourcesContent":["import { createStore } from \"redux\";\n\nconst initialState = { counter: 0, showCounter: true };\nconst countReducer = (state = { counter: 0 }, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + action.amount,\n    };\n  } else if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n    };\n  }\n  return state;\n};\n\nconst store = createStore(countReducer);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAE;AAA3B,CAArB;;AACA,MAAMC,YAAY,GAAG,YAAoC;EAAA,IAAnCC,KAAmC,uEAA3B;IAAEH,OAAO,EAAE;EAAX,CAA2B;EAAA,IAAXI,MAAW;;EACvD,IAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MACLL,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE;IAD3B,CAAP;EAGD,CAJD,MAIO,IAAIF,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IACtC,OAAO;MACLL,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;IADpB,CAAP;EAGD;;EACD,OAAOG,KAAP;AACD,CAXD;;AAaA,MAAMI,KAAK,GAAGT,WAAW,CAACI,YAAD,CAAzB;AAEA,eAAeK,KAAf"},"metadata":{},"sourceType":"module"}