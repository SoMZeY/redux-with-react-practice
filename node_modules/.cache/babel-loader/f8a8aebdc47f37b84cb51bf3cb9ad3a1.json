{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\"; //this is my intial states\n\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst initialAuthState = {\n  isLoggedIn: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isLoggedIn = true;\n    },\n\n    logout(state) {\n      state.isLoggedIn = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","initialAuthState","isLoggedIn","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","authSlice","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["/Users/vladbordia/Downloads/01-starting-project 2/src/store /index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\n//this is my intial states\nconst initialCounterState = { counter: 0, showCounter: true };\nconst initialAuthState = { isLoggedIn: true };\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isLoggedIn = true;\n    },\n    logout(state) {\n      state.isLoggedIn = false;\n    },\n  },\n});\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer,\n  },\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C,C,CAEA;;AACA,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAE;AAA3B,CAA5B;AACA,MAAMC,gBAAgB,GAAG;EAAEC,UAAU,EAAE;AAAd,CAAzB;AAEA,MAAMC,YAAY,GAAGP,WAAW,CAAC;EAC/BQ,IAAI,EAAE,SADyB;EAE/BC,YAAY,EAAEP,mBAFiB;EAG/BQ,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAD,EAAQ;MACfA,KAAK,CAACT,OAAN;IACD,CAHO;;IAIRU,SAAS,CAACD,KAAD,EAAQ;MACfA,KAAK,CAACT,OAAN;IACD,CANO;;IAORW,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;MACtBH,KAAK,CAACT,OAAN,GAAgBS,KAAK,CAACT,OAAN,GAAgBY,MAAM,CAACC,OAAvC;IACD,CATO;;IAURC,aAAa,CAACL,KAAD,EAAQ;MACnBA,KAAK,CAACR,WAAN,GAAoB,CAACQ,KAAK,CAACR,WAA3B;IACD;;EAZO;AAHqB,CAAD,CAAhC;AAmBA,MAAMc,SAAS,GAAGlB,WAAW,CAAC;EAC5BQ,IAAI,EAAE,gBADsB;EAE5BC,YAAY,EAAEJ,gBAFc;EAG5BK,QAAQ,EAAE;IACRS,KAAK,CAACP,KAAD,EAAQ;MACXA,KAAK,CAACN,UAAN,GAAmB,IAAnB;IACD,CAHO;;IAIRc,MAAM,CAACR,KAAD,EAAQ;MACZA,KAAK,CAACN,UAAN,GAAmB,KAAnB;IACD;;EANO;AAHkB,CAAD,CAA7B;AAaA,MAAMe,KAAK,GAAGpB,cAAc,CAAC;EAC3BqB,OAAO,EAAE;IACPnB,OAAO,EAAEI,YAAY,CAACe,OADf;IAEPC,IAAI,EAAEL,SAAS,CAACI;EAFT;AADkB,CAAD,CAA5B;AAOA,OAAO,MAAME,cAAc,GAAGjB,YAAY,CAACkB,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAA9B;AACP,eAAeJ,KAAf"},"metadata":{},"sourceType":"module"}